<!DOCTYPE html>
<html>
<head>
<title>@Language.ProjectPhrase("BodyTitle")</title>
<meta charset="utf-8">
@if (!Empty(ReportExportType) && ReportExportType != "print") { // Stylesheet for exporting reports
<link rel="stylesheet" type="text/css" href="~/@(CssFile(Config.ProjectStylesheetFilename))">
	if (ReportExportType == "pdf" && !Empty(Config.PdfStylesheetFilename)) {
<link rel="stylesheet" type="text/css" href="~/@(CssFile(Config.PdfStylesheetFilename))">
	}
}
@if (!IsExport() || IsExport("print")) {
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<link rel="stylesheet" type="text/css" href="~/adminlte3/css/@CssFile("adminlte.css")">
<link rel="stylesheet" type="text/css" href="~/plugins/fontawesome-free/css/all.min.css">
<link rel="stylesheet" type="text/css" href="~/plugins/fontawesome-free/css/v4-shims.css">
<link rel="stylesheet" type="text/css" href="~/css/OverlayScrollbars.min.css">
<link rel="stylesheet" type="text/css" href="~/@(CssFile(Config.ProjectStylesheetFilename))">
	if (CustomExportType == "pdf" && !Empty(Config.PdfStylesheetFilename)) {
<link rel="stylesheet" type="text/css" href="~/@(CssFile(Config.PdfStylesheetFilename))">
	}
<script src="~/js/ewpolyfill.min.js"></script>
<script src="~/js/loadjs.min.js"></script>
<script src="~/js/ewcfg.js"></script>
<script>
Object.assign(ew, {
	LANGUAGE_ID: "@(CurrentLanguage)",
	DATE_SEPARATOR: "@(DateSeparator)", // Date separator
	TIME_SEPARATOR: "@(TimeSeparator)", // Time separator
	DATE_FORMAT: "@(DateFormat)", // Default date format
	DATE_FORMAT_ID: @(DateFormatId), // Default date format ID
	DATETIME_WITHOUT_SECONDS: @(Config.DateTimeWithoutSeconds ? "true" : "false"), // Date/Time without seconds
	DECIMAL_POINT: "@(DecimalPoint)",
	THOUSANDS_SEP: "@(ThousandsSeparator)",
	SESSION_TIMEOUT: @(Config.SessionTimeout > 0 ? SessionTimeoutTime() : 0), // Session timeout time (seconds)
	SESSION_TIMEOUT_COUNTDOWN: @(Config.SessionTimeoutCountdown), // Count down time to session timeout (seconds)
	SESSION_KEEP_ALIVE_INTERVAL: @(Config.SessionKeepAliveInterval), // Keep alive interval (seconds)
	USE_URL_REWRITE: true, // Use URL rewrite // DN
	RELATIVE_PATH: "", // Relative path // DN
	IS_LOGGEDIN: @(IsLoggedIn() ? "true" : "false"), // Is logged in
	IS_SYS_ADMIN: @(IsSysAdmin() ? "true" : "false"), // Is sys admin
	CURRENT_USER_NAME: "@(JsEncode(CurrentUserName()))", // Current user name
	IS_AUTOLOGIN: @(IsAutoLogin() ? "true" : "false"), // Is logged in with option "Auto login until I logout explicitly"
	TIMEOUT_URL: "@AppPath("Index")", // Timeout URL // DN
	TOKEN_NAME: "@(Config.TokenName)", // Token name
	API_FILE_TOKEN_NAME: "@(Config.ApiFileTokenName)", // API file token name
	API_URL: "@AppPath(Config.ApiUrl)", // API file name // DN
	API_ACTION_NAME: "@(Config.ApiActionName)", // API action name
	API_OBJECT_NAME: "@(Config.ApiObjectName)", // API object name
	API_FIELD_NAME: "@(Config.ApiFieldName)", // API field name
	API_KEY_NAME: "@(Config.ApiKeyName)", // API key name
	API_LIST_ACTION: "@(Config.ApiListAction)", // API list action
	API_VIEW_ACTION: "@(Config.ApiViewAction)", // API view action
	API_ADD_ACTION: "@(Config.ApiAddAction)", // API add action
	API_EDIT_ACTION: "@(Config.ApiEditAction)", // API edit action
	API_DELETE_ACTION: "@(Config.ApiDeleteAction)", // API delete action
	API_LOGIN_ACTION: "@(Config.ApiLoginAction)", // API login action
	API_FILE_ACTION: "@(Config.ApiFileAction)", // API file action
	API_UPLOAD_ACTION: "@(Config.ApiUploadAction)", // API upload action
	API_JQUERY_UPLOAD_ACTION: "@(Config.ApiJqueryUploadAction)", // API jQuery upload action
	API_SESSION_ACTION: "@(Config.ApiSessionAction)", // API get session action
	API_LOOKUP_ACTION: "@(Config.ApiLookupAction)", // API lookup action
	API_LOOKUP_PAGE: "@(Config.ApiLookupPage)", // API lookup page name
	API_PROGRESS_ACTION: "@(Config.ApiProgressAction)", // API progress action
	API_EXPORT_CHART_ACTION: "@(Config.ApiExportChartAction)", // API export chart action
	API_JWT_AUTHORIZATION_HEADER: "Authorization", // API JWT authorization header // DN
	API_JWT_TOKEN: "@(GetJwtToken())", // DN
	MULTIPLE_OPTION_SEPARATOR: "@(Config.MultipleOptionSeparator)", // Multiple option separator
	AUTO_SUGGEST_MAX_ENTRIES: @(Config.AutoSuggestMaxEntries), // Auto-Suggest max entries
	MAX_EMAIL_RECIPIENT: @(Config.MaxEmailRecipient),
	PATH_BASE: "@AppPath()", // Path base // DN
	IMAGE_FOLDER: "@AppPath("images/")", // Image folder // DN
	SESSION_ID: "@(Encrypt(Session.SessionId))", // Session ID
	UPLOAD_TYPE: "@(Config.UploadType)", // Upload type
	UPLOAD_THUMBNAIL_WIDTH: @(Config.UploadThumbnailWidth), // Upload thumbnail width
	UPLOAD_THUMBNAIL_HEIGHT: @(Config.UploadThumbnailHeight), // Upload thumbnail height
	MULTIPLE_UPLOAD_SEPARATOR: "@(Config.MultipleUploadSeparator)", // Upload multiple separator
	IMPORT_FILE_ALLOWED_EXT: "@(Config.ImportFileExtensions)", // Import file allowed extensions
	USE_COLORBOX: @(Config.UseColorbox ? "true" : "false"),
	USE_JAVASCRIPT_MESSAGE: true,
	PROJECT_STYLESHEET_FILENAME: "@AppPath(Config.ProjectStylesheetFilename)", // Project style sheet
	PDF_STYLESHEET_FILENAME: "@AppPath(Config.PdfStylesheetFilename)", // PDF style sheet // DN
	EMBED_PDF: @(Config.EmbedPdf ? "true" : "false"),
	ANTIFORGERY_TOKEN: "@(CurrentToken)", // DN
	CSS_FLIP: @(Config.CssFlip ? "true" : "false"),
	LAZY_LOAD: @(Config.LazyLoad ? "true" : "false"),
	USE_RESPONSIVE_TABLE: @(Config.UseResponsiveTable ? "true" : "false"),
	RESPONSIVE_TABLE_CLASS: "@(Config.ResponsiveTableClass)",
	DEBUG: @(Config.Debug ? "true" : "false"),
	SEARCH_FILTER_OPTION: "@(Config.SearchFilterOption)",
	OPTION_HTML_TEMPLATE: @Html.Raw(ConvertToJson(Config.OptionHtmlTemplate))
});
loadjs(ew.PATH_BASE + "js/jquery-3.4.1.min.js", "jquery");
loadjs([
	ew.PATH_BASE + "js/mobile-detect.min.js",
	ew.PATH_BASE + "js/purify.min.js",
	ew.PATH_BASE + "js/load-image.all.min.js"
], "others");
@Html.Raw(await Language.ToScript())
ew.vars = @Html.Raw(ConvertToJson(ClientVariables));
ew.ready("jquery", ew.PATH_BASE + "js/jsrender.min.js", "jsrender", ew.renderJsTemplates);
ew.ready("jsrender", ew.PATH_BASE + "js/jquery.overlayScrollbars.min.js", "scrollbars", ew.initSidebarScrollbars); // Init sidebar scrollbars after rendering menu
ew.ready("jquery", ew.PATH_BASE + "js/jquery.ui.widget.min.js", "widget");
ew.loadjs([ew.PATH_BASE + "moment/moment.min.js", ew.PATH_BASE + "js/Chart.min.js"], "moment");
</script>
@await Html.PartialAsync("ewmenu")
<script>
var cssfiles = [
	ew.PATH_BASE + "css/Chart.min.css",
	ew.PATH_BASE + "css/jquery.fileupload.css",
	ew.PATH_BASE + "css/jquery.fileupload-ui.css"
];
cssfiles.push(ew.PATH_BASE + "colorbox/colorbox.css");
loadjs(cssfiles, "css");
var cssjs = [];
@foreach (string file in Config.StylesheetFiles.Union(Config.JavaScriptFiles)) { // External Stylesheets and JavaScripts
	@:cssjs.push("@(IsRemote(file) ? file : AppPath(file))");
}
var jqueryjs = [
	ew.PATH_BASE + "adminlte3/js/adminlte.js",
	ew.PATH_BASE + "bootstrap4/js/bootstrap.bundle.min.js",
	ew.PATH_BASE + "js/jquery.fileDownload.min.js",
	ew.PATH_BASE + "js/jqueryfileupload.min.js",
	ew.PATH_BASE + "js/typeahead.jquery.min.js"
];
jqueryjs.push(ew.PATH_BASE + "colorbox/jquery.colorbox-min.js");
jqueryjs.push(ew.PATH_BASE + "js/pdfobject.min.js");
ew.ready(["jquery", "widget", "scrollbars", "moment", "others"], [jqueryjs, ew.PATH_BASE + "js/ew.js"], "makerjs");
ew.ready("makerjs", [cssjs, ew.PATH_BASE + "js/userfn.js"], "head");
</script>
<script>
loadjs.ready("head", function() {

	// Global client script
	// Write your client script here, no need to add script tags.

});
</script>
<!-- Navbar -->
<script type="text/html" id="navbar-menu-items" class="ew-js-template" data-name="navbar" data-seq="10" data-data="navbar" data-method="appendTo" data-target="#ew-navbar">
{{if items}}
	{{for items}}
		<li id="{{:id}}" name="{{:name}}" class="{{if parentId == -1}}nav-item ew-navbar-item{{/if}}{{if isHeader && parentId > -1}}dropdown-header{{/if}}{{if items}} dropdown{{/if}}{{if items && parentId != -1}} dropdown-submenu{{/if}}{{if items && level == 1}} dropdown-hover{{/if}} d-none d-md-block">
			{{if isHeader && parentId > -1}}
				{{if icon}}<i class="{{:icon}}"></i>{{/if}}
				<span>{{:text}}</span>
			{{else}}
			<a href="{{:href}}"{{if target}} target="{{:target}}"{{/if}}{{if attrs}}{{:attrs}}{{/if}} class="{{if parentId == -1}}nav-link{{else}}dropdown-item{{/if}}{{if active}} active{{/if}}{{if items}} dropdown-toggle ew-dropdown{{/if}}"{{if items}} role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"{{/if}}>
				{{if icon}}<i class="{{:icon}}"></i>{{/if}}
				<span>{{:text}}</span>
			</a>
			{{/if}}
			{{if items}}
			<ul class="dropdown-menu">
				{{include tmpl="#navbar-menu-items"/}}
			</ul>
			{{/if}}
		</li>
	{{/for}}
{{/if}}
</script>
<!-- Sidebar -->
<script type="text/html" class="ew-js-template" data-name="menu" data-seq="10" data-data="menu" data-target="#ew-menu">
{{if items}}
	<ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="{{:accordion}}">
	{{include tmpl="#menu-items"/}}
	</ul>
{{/if}}
</script>
<script type="text/html" id="menu-items">
{{if items}}
	{{for items}}
		<li id="{{:id}}" name="{{:name}}" class="{{if isHeader}}nav-header{{else}}nav-item{{if items}} has-treeview{{/if}}{{if active}} active current{{/if}}{{if open}} menu-open{{/if}}{{/if}}{{if isNavbarItem}} d-block d-md-none{{/if}}">
			{{if isHeader}}
				{{if icon}}<i class="{{:icon}}"></i>{{/if}}
				<span>{{:text}}</span>
				{{if label}}
				<span class="right">
					{{:label}}
				</span>
				{{/if}}
			{{else}}
			<a href="{{:href}}" class="nav-link{{if active}} active{{/if}}"{{if target}} target="{{:target}}"{{/if}}{{if attrs}}{{:attrs}}{{/if}}>
				{{if icon}}<i class="nav-icon {{:icon}}"></i>{{/if}}
				<p><span class="menu-item-text">{{:text}}</span>
					{{if items}}
						<i class="right fas fa-angle-left"></i>
						{{if label}}
							<span class="right">
								{{:label}}
							</span>
						{{/if}}
					{{else}}
						{{if label}}
							<span class="right">
								{{:label}}
							</span>
						{{/if}}
					{{/if}}
				</p>
			</a>
			{{/if}}
			{{if items}}
			<ul class="nav nav-treeview"{{if open}} style="display: block;"{{/if}}>
				{{include tmpl="#menu-items"/}}
			</ul>
			{{/if}}
		</li>
	{{/for}}
{{/if}}
</script>
<script type="text/html" class="ew-js-template" data-name="languages" data-seq="10" data-data="languages" data-method="@(Language.Method)" data-target="@(HtmlEncode(Language.Target))">
@Html.Raw(Language.GetTemplate())
</script>
}
<link rel="shortcut icon" type="image/png" href="@(AppPath())SMART BANK">
<link rel="icon" type="image/png" href="@(AppPath())SMART BANK">
<meta name="generator" content="ASP.NET Maker 2020">
</head>
<body class="@(Config.BodyClass)" dir="@(Config.CssFlip ? "rtl" : "ltr")">
@if (!IsExport()) {
	if (!SkipHeaderFooter) {
<div class="wrapper ew-layout">
	<!-- Main Header -->
	<!-- Navbar -->
	<nav class="@(Config.NavbarClass)">
		<!-- Left navbar links -->
		<ul id="ew-navbar" class="navbar-nav">
			<li class="nav-item d-block">
				<a class="nav-link" data-widget="pushmenu" href="#" onclick="return false;"><i class="fas fa-bars"></i></a>
			</li>
			<a class="navbar-brand d-none" href="#"  onclick="return false;">
				<span class="brand-text">SMART BANK</span>
			</a>
		</ul>
		<!-- Right navbar links -->
		<ul id="ew-navbar-right" class="navbar-nav ml-auto"></ul>
	</nav>
	<!-- /.navbar -->
	<!-- Main Sidebar Container -->
	<aside class="@(Config.SidebarClass)">
		<!-- Brand Logo //** Note: Only licensed users are allowed to change the logo ** -->
		<a href="#" class="brand-link">
			<span class="brand-text">SMART BANK</span>
		</a>
		<!-- Sidebar -->
		<div class="sidebar">
			<!-- Sidebar Menu -->
			<nav id="ew-menu" class="mt-2"></nav>
			<!-- /.sidebar-menu -->
		</div>
		<!-- /.sidebar -->
	</aside>
	<!-- Content Wrapper. Contains page content -->
	<div class="content-wrapper">
		<!-- Content Header (Page header) -->
		<div class="content-header">
	@if (Config.PageTitleStyle != "None") {
			<div class="container-fluid">
				<div class="row mb-2">
				<div class="col-sm-6">
					<h1 class="m-0 text-dark">@Html.Raw(CurrentPageHeading()) <small class="text-muted">@Html.Raw(CurrentPageSubheading())</small></h1>
				</div><!-- /.col -->
				<div class="col-sm-6">
					@{ CurrentBreadcrumb?.Render(); }
				</div><!-- /.col -->
				</div><!-- /.row -->
			</div><!-- /.container-fluid -->
	}
		</div>
		<!-- /.content-header -->
		<!-- Main content -->
		<section class="content">
		<div class="container-fluid">
		@RenderBody()
		</div><!-- /.container-fluid -->
		</section>
		<!-- /.content -->
	</div>
	<!-- /.content-wrapper -->
	<!-- Main Footer -->
	<footer class="main-footer">
		<!-- ** Note: Only licensed users are allowed to change the copyright statement. ** -->
		<div class="ew-footer-text">@Html.Raw(Language.ProjectPhrase("FooterText"))</div>
		<div class="float-right d-none d-sm-inline-block"></div>
	</footer>
</div>
<!-- ./wrapper -->
	} else { // SkipHeaderFooter
		@RenderBody()
	}
<!-- template upload (for file upload) -->
<script id="template-upload" type="text/html">
{{for files}}
	<tr class="template-upload">
		<td>
			<span class="preview"></span>
		</td>
		<td>
			<p class="name">{{:name}}</p>
			<p class="error text-danger"></p>
		</td>
		<td>
			<div class="progress" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar bg-success" style="width: 0%;"></div></div>
		</td>
		<td>
			{{if !#index && !~root.options.autoUpload}}
			<button class="btn btn-default btn-sm start" disabled>@Html.Raw(Language.Phrase("UploadStart"))</button>
			{{/if}}
			{{if !#index}}
			<button class="btn btn-default btn-sm cancel">@Html.Raw(Language.Phrase("UploadCancel"))</button>
			{{/if}}
		</td>
	</tr>
{{/for}}
</script>
<!-- template download (for file upload) -->
<script id="template-download" type="text/html">
{{for files}}
	<tr class="template-download">
		<td>
			<span class="preview">
				{{if !exists}}
				<span class="text-danger">@Html.Raw(Language.Phrase("FileNotFound"))</span>
				{{else url && extension == "pdf"}}
				<div class="ew-pdfobject" data-url="{{>url}}" style="width: @(Config.UploadThumbnailWidth)px;"></div>
				{{else url && extension == "mp3"}}
				<audio controls><source type="audio/mpeg" src="{{>url}}"></audio>
				{{else url && extension == "mp4"}}
				<video controls><source type="video/mp4" src="{{>url}}"></video>
				{{else thumbnailUrl}}
				<a href="{{>url}}" title="{{>name}}" download="{{>name}}" class="ew-lightbox"><img src="{{>thumbnailUrl}}"></a>
				{{/if}}
			</span>
		</td>
		<td>
			<p class="name">
				{{if !exists}}
				<span class="text-muted">{{:name}}</span>
				{{else url && thumbnailUrl && extension != "pdf" && extension != "mp3" && extension != "mp4"}}
				<a href="{{>url}}" title="{{>name}}" download="{{>name}}" class="ew-lightbox">{{:name}}</a>
				{{else url}}
				<a href="{{>url}}" title="{{>name}}" download="{{>name}}">{{:name}}</a>
				{{else}}
				<span>{{:name}}</span>
				{{/if}}
			</p>
			{{if error}}
			<div><span class="error text-danger">{{:error}}</span></div>
			{{/if}}
		</td>
		<td>
			<span class="size">{{:~root.formatFileSize(size)}}</span>
		</td>
		<td>
			{{if !~root.options.readOnly && deleteUrl}}
			<button class="btn btn-default btn-sm delete" data-type="{{>deleteType}}" data-url="{{>deleteUrl}}">@Html.Raw(Language.Phrase("UploadDelete"))</button>
			{{else !~root.options.readOnly}}
			<button class="btn btn-default btn-sm cancel">@Html.Raw(Language.Phrase("UploadCancel"))</button>
			{{/if}}
		</td>
	</tr>
{{/for}}
</script>
<!-- modal dialog -->
<div id="ew-modal-dialog" class="modal" role="dialog" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"></h4></div><div class="modal-body"></div><div class="modal-footer"></div></div></div></div>
<!-- email dialog -->
<div id="ew-email-dialog" class="modal" role="dialog" aria-hidden="true"><div class="modal-dialog modal-lg"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"></h4></div>
<div class="modal-body">
@await Html.PartialAsync("ewemail")
</div><div class="modal-footer"><button type="button" class="btn btn-primary ew-btn">@Html.Raw(Language.Phrase("SendEmailBtn"))</button><button type="button" class="btn btn-default ew-btn" data-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button></div></div></div></div>
<!-- import dialog -->
<div id="ew-import-dialog" class="modal" role="dialog" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"></h4></div>
<div class="modal-body">
<div class="custom-file">
	<input type="file" class="custom-file-input" id="importfiles" title=" " name="importfiles[]" multiple lang="@(CurrentLanguageID)">
	<label class="custom-file-label" for="importfiles">@Html.Raw(Language.Phrase("ChooseFiles"))</label>
</div>
<div class="message d-none mt-3"></div>
<div class="progress d-none mt-3"><div class="progress-bar progress-bar-striped" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%">0%</div></div>
</div>
<div class="modal-footer"><button type="button" class="btn btn-default ew-close-btn" data-dismiss="modal">@Html.Raw(Language.Phrase("CloseBtn"))</button></div></div></div></div>
<!-- message box -->
<div id="ew-message-box" class="modal" role="dialog" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"><div class="modal-body"></div><div class="modal-footer"><button type="button" class="btn btn-primary ew-btn" data-dismiss="modal">@Html.Raw(Language.Phrase("MessageOK"))</button></div></div></div></div>
<!-- prompt -->
<div id="ew-prompt" class="modal" role="dialog" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"><div class="modal-body"></div><div class="modal-footer"><button type="button" class="btn btn-primary ew-btn">@Html.Raw(Language.Phrase("MessageOK"))</button><button type="button" class="btn btn-default ew-btn" data-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button></div></div></div></div>
<!-- session timer -->
<div id="ew-timer" class="modal" role="dialog" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"><div class="modal-body"></div><div class="modal-footer"><button type="button" class="btn btn-primary ew-btn" data-dismiss="modal">@Html.Raw(Language.Phrase("MessageOK"))</button></div></div></div></div>
<!-- tooltip -->
<div id="ew-tooltip"></div>
@if (!IsDrillDownInPanel) {
<!-- drill down -->
<div id="ew-drilldown-panel"></div>
}
} else { // Export
	@RenderBody()
}
@if (!IsExport() || IsExport("print")) {
<script>

// User event handlers
ew.ready(ew.bundleIds, ew.PATH_BASE + "js/userevt.js", "load", function() {

	// Global startup script
	// Write your global startup script here
	// document.write("page loaded");

});
</script>
}
</body>
</html>